import axios from 'axios';
import { ImageUtils } from '../market/wb/utils/imageUtils.js';

export class ProductApiService {
    constructor() {
        this.baseUrl = 'https://u-card.wb.ru/cards/v4/detail';
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É
     */
    async fetchProductByNmId(nmId) {
        try {
            console.log(`üì° –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ ${nmId}...`);

            const response = await axios.get(this.baseUrl, {
                params: {
                    appType: 1,
                    curr: 'rub',
                    dest: -1257786,
                    spp: 30,
                    hide_dtype: 11,
                    ab_testing: false,
                    lang: 'ru',
                    nm: nmId,
                },
                timeout: 15000,
                headers: {
                    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
                    Accept: 'application/json',
                },
            });

            if (!response.data?.products?.[0]) {
                throw new Error('–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }

            const productData = response.data.products[0];
            console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ: ${productData.name}`);

            return this.normalizeProductData(productData);
        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ ${nmId}:`, error.message);
            throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ');
        }
    }

    getProductImageUrl(nmId) {
        try {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–∞—à —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–µ—Ç–æ–¥
            const imageUrl = ImageUtils.getProductImageUrl(nmId);
            console.log(`üñºÔ∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${imageUrl}`);
            return imageUrl;
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
            return null;
        }
    }

    /**
     * –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞
     */
    async normalizeProductData(productData) {
        const price = this.extractProductPrice(productData);
        const priceInRubles = Math.round(price / 100);

        // –ò—â–µ–º —Ä–∞–±–æ—á–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        const validImageUrl = await this.findWorkingImageUrl(productData.id);

        return {
            nm_id: productData.id,
            name: productData.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä',
            brand: productData.brand || '',
            brandId: productData.brandId || 0,
            current_price: priceInRubles,
            rating: productData.rating || productData.reviewRating || 0,
            feedbacks_count: productData.feedbacks || productData.feedbackCount || 0,
            image_url: validImageUrl, // –¢–æ–ª—å–∫–æ —Ä–∞–±–æ—á–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            supplier: productData.supplier || '',
            supplier_id: productData.supplierId || 0,
            url: `https://www.wildberries.ru/catalog/${productData.id}/detail.aspx`,
            colors: productData.colors || [],
            sizes: productData.sizes || [],
        };
    }

    /**
     * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞
     */
    extractProductPrice(productData) {
        // –û—Å–Ω–æ–≤–Ω–æ–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ sizes
        if (productData.sizes?.[0]?.price?.product) {
            return productData.sizes[0].price.product;
        }
        if (productData.sizes?.[0]?.price?.basic) {
            return productData.sizes[0].price.basic;
        }
        // –†–µ–∑–µ—Ä–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã
        if (productData.salePriceU) {
            return productData.salePriceU;
        }
        return productData.priceU || 0;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
     */
    getProductImageUrl(nmId) {
        // –õ–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –≤ monitoringService)
        const basket = Math.floor(nmId / 1e5);
        const vol = Math.floor(basket / 1e3);

        return `https://basket-0${Math.floor(
            vol / 1000
        )}.wbbasket.ru/vol${vol}/part${basket}/${nmId}/images/c246x328/1.jpg`;
    }

    /**
     * –ò–∑–≤–ª–µ—á—å nmId –∏–∑ URL —Ç–æ–≤–∞—Ä–∞
     */
    extractNmIdFromUrl(url) {
        try {
            console.log(`üîç –ü–∞—Ä—Å–∏–º URL: ${url}`);

            let nmId = null;

            // –í–∞—Ä–∏–∞–Ω—Ç 1: /catalog/123456789/detail.aspx
            const catalogMatch = url.match(/catalog\/(\d+)\/detail/);
            if (catalogMatch && catalogMatch[1]) {
                nmId = parseInt(catalogMatch[1]);
            }

            // –í–∞—Ä–∏–∞–Ω—Ç 2: –ü–∞—Ä–∞–º–µ—Ç—Ä nm= –≤ —Å—Å—ã–ª–∫–µ
            if (!nmId) {
                const nmMatch = url.match(/[?&]nm=(\d+)/);
                if (nmMatch && nmMatch[1]) {
                    nmId = parseInt(nmMatch[1]);
                }
            }

            // –í–∞—Ä–∏–∞–Ω—Ç 3: –ö–æ—Ä–æ—Ç–∫–∏–µ —Å—Å—ã–ª–∫–∏ WB
            if (!nmId) {
                const shortMatch = url.match(/\/(\d+)\/?$/);
                if (shortMatch && shortMatch[1]) {
                    nmId = parseInt(shortMatch[1]);
                }
            }

            // –í–∞—Ä–∏–∞–Ω—Ç 4: –ü—Ä—è–º–æ–π –∞—Ä—Ç–∏–∫—É–ª (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –ø—Ä–æ—Å—Ç–æ —Ü–∏—Ñ—Ä—ã)
            if (!nmId) {
                const digitsOnly = url.match(/^(\d+)$/);
                if (digitsOnly && digitsOnly[1]) {
                    nmId = parseInt(digitsOnly[1]);
                }
            }

            if (!nmId || isNaN(nmId)) {
                throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∞—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä–∞ –∏–∑ —Å—Å—ã–ª–∫–∏');
            }

            console.log(`‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω nmId: ${nmId}`);
            return nmId;
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è nmId:', error);
            throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∞—Ä—Ç–∏–∫—É–ª –∏–∑ —Å—Å—ã–ª–∫–∏');
        }
    }

    async validateImageUrl(imageUrl) {
        try {
            if (!imageUrl) return false;

            // Telegram –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç webp, –ø–æ—ç—Ç–æ–º—É –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏—Ö
            if (imageUrl.includes('.webp')) {
                console.log(`üñºÔ∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º webp –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${imageUrl}`);
                return false;
            }

            const response = await axios.head(imageUrl, {
                timeout: 5000,
                headers: {
                    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
                },
            });

            const isValid = response.status === 200 && response.headers['content-type']?.includes('image');

            console.log(`üñºÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ${imageUrl}: ${isValid ? 'VALID' : 'INVALID'}`);
            return isValid;
        } catch (error) {
            console.log(`üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ: ${imageUrl}`);
            return false;
        }
    }

    /**
     * –ù–∞–π—Ç–∏ —Ä–∞–±–æ—á–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ç–æ–≤–∞—Ä–∞
     */
    async findWorkingImageUrl(nmId) {
        try {
            const allUrls = ImageUtils.getAllImageUrls(nmId);

            for (const url of allUrls) {
                if (await this.validateImageUrl(url)) {
                    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ä–∞–±–æ—á–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${url}`);
                    return url;
                }
            }

            console.log(`‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–∞–±–æ—á–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Ç–æ–≤–∞—Ä–∞ ${nmId}`);
            return null;
        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è ${nmId}:`, error);
            return null;
        }
    }
}

export const productApiService = new ProductApiService();
