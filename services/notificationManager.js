import dayjs from 'dayjs';
import utc from 'dayjs/plugin/utc.js';
import timezone from 'dayjs/plugin/timezone.js';

dayjs.extend(utc);
dayjs.extend(timezone);
dayjs.tz.setDefault('Europe/Moscow');

class NotificationManager {
    constructor() {
        this.notificationService = null;
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
     */
    initialize(notificationService) {
        this.notificationService = notificationService;
        console.log('‚úÖ NotificationManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ü–µ–Ω—ã
     */
    sendPriceAlert(alertData, categoryName) {
        if (!this.notificationService) {
            console.error('‚ùå NotificationManager –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            return false;
        }

        const message = this.formatPriceAlertMessage(alertData, categoryName);

        this.notificationService.addToQueue({
            chatId: alertData.user_id,
            text: message,
            image_url: alertData.image_url,
        });

        return true;
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ü–µ–Ω—ã
     */
    formatPriceAlertMessage(alert, categoryName) {
        const changeIcon = alert.percent_change > 0 ? 'üìà' : 'üìâ';
        const changeType = alert.percent_change > 0 ? '–ø–æ–¥–æ—Ä–æ–∂–∞–ª' : '–ø–æ–¥–µ—à–µ–≤–µ–ª';
        const changeColor = alert.percent_change > 0 ? 'üî¥' : 'üü¢';
        const productUrl = `https://www.wildberries.ru/catalog/${alert.product_id}/detail.aspx`;

        const parseDbTime = (timeString) => {
            // SQLite —Ö—Ä–∞–Ω–∏—Ç –≤—Ä–µ–º—è –≤ UTC —Ñ–æ—Ä–º–∞—Ç–µ: "2025-10-12 19:24:00"
            // –°–Ω–∞—á–∞–ª–∞ –ø–∞—Ä—Å–∏–º –∫–∞–∫ UTC, –ø–æ—Ç–æ–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –ú–æ—Å–∫–≤—É
            return dayjs.utc(timeString, 'YYYY-MM-DD HH:mm:ss').tz('Europe/Moscow');
        };

        const oldTimeFormatted = parseDbTime(alert.old_time).format('DD.MM.YYYY HH:mm');
        const newTimeFormatted = parseDbTime(alert.new_time).format('DD.MM.YYYY HH:mm');
        const currentTimeFormatted = dayjs().tz('Europe/Moscow').format('DD.MM.YYYY HH:mm');

        return `
${changeColor} <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã</b>

üì¶ <b>${alert.product_name}</b>
üè∑Ô∏è –ë—Ä–µ–Ω–¥: ${alert.brand || '–ù–µ —É–∫–∞–∑–∞–Ω'}
üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${categoryName}

üí∞ <b>–¶–µ–Ω–∞:</b> ${alert.old_price} —Ä—É–±. (${oldTimeFormatted}) ‚Üí ${alert.new_price} —Ä—É–±. (${newTimeFormatted})
${changeIcon} <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ:</b> ${Math.abs(alert.percent_change).toFixed(2)}% ${changeType}

‚ö° <b>–ü–æ—Ä–æ–≥ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</b> ${alert.threshold}%

üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä: ${productUrl}

üïí ${currentTimeFormatted}
    `.trim();
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     */
    sendSystemNotification(chatId, title, message) {
        if (!this.notificationService) {
            console.error('‚ùå NotificationManager –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            return false;
        }

        const text = `üîî <b>${title}</b>\n\n${message}`;

        this.notificationService.addToQueue({
            chatId,
            text,
        });

        return true;
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
export const notificationManager = new NotificationManager();
