import axios from 'axios';

export class YooMoneyOAuthService {
    constructor() {
        this.clientId = process.env.YOOMONEY_CLIENT_ID;
        this.clientSecret = process.env.YOOMONEY_CLIENT_SECRET;
        //   this.redirectUri = process.env.YOOMONEY_REDIRECT_URI || 'https://example.com/oauth/callback'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URI
        this.accessToken = null;
        this.tokenExpires = null;
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è access token –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    async initialize() {
        try {
            console.log('üîÑ Initializing YooMoney OAuth service...');

            // –ï—Å–ª–∏ —É –Ω–∞—Å —É–∂–µ –µ—Å—Ç—å –¥–µ–π—Å—Ç–≤—É—é—â–∏–π —Ç–æ–∫–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
            if (this.isTokenValid()) {
                console.log('‚úÖ Using existing valid access token');
                return this.accessToken;
            }

            // –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω
            await this.getNewAccessToken();
            console.log('‚úÖ YooMoney OAuth service initialized successfully');
            return this.accessToken;
        } catch (error) {
            console.error('‚ùå Failed to initialize YooMoney OAuth service:', error);
            throw error;
        }
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Ç–æ–∫–µ–Ω–∞
    isTokenValid() {
        if (!this.accessToken || !this.tokenExpires) {
            return false;
        }
        return Date.now() < this.tokenExpires;
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ access token (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è - –≤–∞–º –Ω—É–∂–Ω–æ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥ –≤–∞—à flow)
    async getNewAccessToken() {
        try {
            // –í–ê–ñ–ù–û: –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä. –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –≤–∞–º –Ω—É–∂–Ω–æ:
            // 1. –ò–º–µ—Ç—å –º–µ—Ö–∞–Ω–∏–∑–º –ø–æ–ª—É—á–µ–Ω–∏—è authorization code –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            // 2. –û–±–º–µ–Ω–∏–≤–∞—Ç—å code –Ω–∞ access token

            // –î–ª—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Client Credentials flow –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
            const response = await axios.post(
                'https://yoomoney.ru/oauth/token',
                new URLSearchParams({
                    grant_type: 'client_credentials',
                    client_id: this.clientId,
                    client_secret: this.clientSecret,
                    scope: 'account-info operation-history operation-details', // –ó–∞–ø—Ä–æ—Å–∏—Ç–µ –Ω—É–∂–Ω—ã–µ scope
                }),
                {
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                }
            );

            if (response.data.access_token) {
                this.accessToken = response.data.access_token;
                // –¢–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤—É–µ—Ç 3 –≥–æ–¥–∞ - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º expiration –Ω–∞ 2.5 –≥–æ–¥–∞ –¥–ª—è –ø–µ—Ä–µ—Å—Ç—Ä–∞—Ö–æ–≤–∫–∏
                this.tokenExpires = Date.now() + 2.5 * 365 * 24 * 60 * 60 * 1000;
                return this.accessToken;
            } else {
                throw new Error('No access token in response');
            }
        } catch (error) {
            console.error('Error getting access token:', error.response?.data || error.message);

            // Fallback: –µ—Å–ª–∏ OAuth –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥ (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)
            if (process.env.YOOMONEY_ACCESS_TOKEN) {
                console.log('‚ö†Ô∏è Using fallback access token from environment');
                this.accessToken = process.env.YOOMONEY_ACCESS_TOKEN;
                this.tokenExpires = Date.now() + 2.5 * 365 * 24 * 60 * 60 * 1000;
                return this.accessToken;
            }

            throw error;
        }
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    async ensureValidToken() {
        if (!this.isTokenValid()) {
            console.log('üîÑ Access token expired, getting new one...');
            await this.getNewAccessToken();
        }
        return this.accessToken;
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    async makeAuthorizedRequest(config) {
        try {
            await this.ensureValidToken();

            const response = await axios({
                ...config,
                headers: {
                    ...config.headers,
                    Authorization: `Bearer ${this.accessToken}`,
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
            });

            return response.data;
        } catch (error) {
            console.error('Authorized request failed:', error.response?.data || error.message);

            // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –ø—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω
            if (error.response?.status === 401) {
                console.log('üîÑ Token might be invalid, trying to refresh...');
                await this.getNewAccessToken();

                // –ü–æ–≤—Ç–æ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å —Å –Ω–æ–≤—ã–º —Ç–æ–∫–µ–Ω–æ–º
                const retryResponse = await axios({
                    ...config,
                    headers: {
                        ...config.headers,
                        Authorization: `Bearer ${this.accessToken}`,
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                });

                return retryResponse.data;
            }

            throw error;
        }
    }
}
